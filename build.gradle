//buildscript {
//    repositories {
//        mavenLocal()
//        mavenCentral()
//    }
//    dependencies {
//        classpath "org.hibernate:hibernate-gradle-plugin:5.6.4.Final"
//    }
//}

// byteCode enhancement

plugins {
    id 'java'
    id 'groovy'
    id 'org.springframework.boot' version "$springVersion"
    id 'io.spring.dependency-management' version "$springManagementVersion"
}

//apply plugin: 'org.hibernate.orm'

group = "${groupName}"
version = "$appVersion"

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of("$javaVersion")
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // postgresql
    runtimeOnly 'org.postgresql:postgresql'

    // web
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // liquibase
    implementation 'org.liquibase:liquibase-core'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation "org.apache.groovy:groovy:$groovyVersion"
    testImplementation "org.spockframework:spock-spring:$spockSpringVersion"
    testImplementation "io.github.benas:random-beans:$randomBeansVersion"

    // swagger
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${swaggerVersion}"

    // aop
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    // minio
    implementation "io.minio:minio:${minioVersion}"

    // security
    implementation "com.nimbusds:nimbus-jose-jwt:${jwtVersion}"
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // redis
    implementation "org.redisson:redisson-spring-boot-starter:${redisVersion}"

    // validation
    implementation "org.springframework.boot:spring-boot-starter-validation"

    // configuration
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
}

tasks.named('test') {
    useJUnitPlatform()
}

//hibernate {
//    enhance {
//        enableLazyInitialization= true
//    }
//}